exports[`test renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
        "overflow": "hidden",
      }
    }>
    <View
      onStartShouldSetResponderCapture={[Function]}
      pointerEvents="auto"
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
              Object {
                "scaleX": 1,
              },
              Object {
                "scaleY": 1,
              },
              Object {
                "rotate": "0deg",
              },
              Object {
                "skewX": "0deg",
              },
              Object {
                "skewY": "0deg",
              },
            ],
          },
          null,
        ]
      }>
      <View
        style={
          Array [
            Object {
              "alignSelf": "flex-start",
              "borderColor": "red",
              "borderWidth": 1,
            },
            undefined,
          ]
        }>
        <View
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "borderColor": "red",
                "borderWidth": 1,
              },
              Object {
                "backgroundColor": "#FFF",
                "height": 50,
              },
            ]
          }>
          <View
            style={undefined}>
            <RCTPicker
              items={
                Array [
                  Object {
                    "label": "hello",
                    "value": "key0",
                  },
                  Object {
                    "label": "world",
                    "value": "key1",
                  },
                ]
              }
              onChange={[Function]}
              selectedIndex={0}
              style={
                Array [
                  Object {
                    "height": 216,
                  },
                  undefined,
                ]
              } />
          </View>
        </View>
        <ScrollView
          dataSource={
            ListViewDataSource {
              "items": "unknown",
            }
          }
          initialListSize={10}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={1000}
          onKeyboardDidHide={undefined}
          onKeyboardDidShow={undefined}
          onKeyboardWillHide={undefined}
          onKeyboardWillShow={undefined}
          onLayout={[Function]}
          onScroll={[Function]}
          pageSize={1}
          removeClippedSubviews={true}
          renderRow={[Function]}
          scrollEventThrottle={50}
          scrollRenderAheadDistance={1000}
          stickyHeaderIndices={Array []} />
      </View>
    </View>
  </View>
</View>
`;
